import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;
import javax.swing.JOptionPane;
import javax.swing.JInternalFrame;


/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author 50687
 */
public class Formulario2 extends JInternalFrame {
     private ArrayList<String> datos;

    /**
     * Crea el nuevo form Formulario2
     */
    public Formulario2() {
        initComponents();
        cargarDatos();
   mostrarDatos();
        
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BuscadorID = new javax.swing.JTextField();
        Buscar = new javax.swing.JButton();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        DatosActuales = new javax.swing.JTextArea();
        Salir = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        Buscar.setText("Enviar");
        Buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarActionPerformed(evt);
            }
        });

        DatosActuales.setColumns(20);
        DatosActuales.setRows(5);
        jScrollPane1.setViewportView(DatosActuales);

        jDesktopPane1.setLayer(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(148, 148, 148))
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 60, Short.MAX_VALUE))
        );

        Salir.setText("Salir");
        Salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirActionPerformed(evt);
            }
        });

        jLabel2.setText("Buscar estudiantes por ID");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(241, 241, 241)
                        .addComponent(Buscar)
                        .addGap(0, 456, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jDesktopPane1)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(215, 215, 215)
                .addComponent(BuscadorID, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Salir)
                .addGap(30, 30, 30))
            .addGroup(layout.createSequentialGroup()
                .addGap(195, 195, 195)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(BuscadorID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Salir))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Buscar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jDesktopPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
private void cargarDatos() {
        datos = new ArrayList<>();
        File archivo = null;
        FileReader fr = null;
        BufferedReader br = null;

        try {
            archivo = new File("Estudiantes.txt");
            fr = new FileReader(archivo);
            br = new BufferedReader(fr);

            String linea;
            while ((linea = br.readLine()) != null) {
                datos.add(linea);
            }
                    } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al cargar los datos", "Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            try {
                if (null != fr) {
                    fr.close();
                }
            } catch (Exception e2) {
                JOptionPane.showMessageDialog(null, "Error al cerrar el archivo", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }
  private void mostrarDatos() {
    DatosActuales.setText(""); // Limpiar el área de texto antes de mostrar los datos
    for (String dato : datos) {
        DatosActuales.append(dato + "\n"); // Agregar cada dato al área de texto
    }
}


   
    private void BuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarActionPerformed
                                    
    // Obtener el ID ingresado por el usuario
    String idBuscado = BuscadorID.getText();

    // Leer el archivo Estudiantes.txt y buscar el estudiante con el ID ingresado
    Estudiante estudianteEncontrado = buscarEstudiantePorID(idBuscado);

    // Verificar si se encontró el estudiante
   if (estudianteEncontrado != null) {
    MostrarEstudianteFormulario mostrarFormulario = new MostrarEstudianteFormulario(estudianteEncontrado, estudianteEncontrado.getId());
    jDesktopPane1.add(mostrarFormulario);
    mostrarFormulario.setSize(400, 800);
    mostrarFormulario.setLocation(50, 50);
    mostrarFormulario.setVisible(true);
  } else {
        // Si no se encontró el estudiante, mostrar un mensaje de error
        JOptionPane.showMessageDialog(this, "No se encontró ningún estudiante con el ID ingresado.", "Error", JOptionPane.ERROR_MESSAGE);
    }
   
}                                      

private Estudiante buscarEstudiantePorID(String idBuscado) {
    // Crear una lista para almacenar los estudiantes
    ArrayList<Estudiante> estudiantes = new ArrayList<>();

    // Leer el archivo Estudiantes.txt y buscar el estudiante con el ID ingresado
    try (BufferedReader br = new BufferedReader(new FileReader("Estudiantes.txt"))) {
    String linea;
    while ((linea = br.readLine()) != null) {
        String[] datos = linea.split(",");
       // Crear un objeto Estudiante con los datos de la línea
            Estudiante estudiante = new Estudiante(datos[1], datos[2], datos[3], datos[4], Integer.parseInt(datos[5]),
                                                    Integer.parseInt(datos[6]), Integer.parseInt(datos[7]), Integer.parseInt(datos[8]),
                                                    Integer.parseInt(datos[9]));
            estudiante.setId(datos[0]); // Establecer el ID usando el método heredado de Persona
            // Agregar el estudiante a la lista
            estudiantes.add(estudiante);
    }
} catch (IOException e) {
    // Manejar la excepción
    e.printStackTrace();
}


    // Buscar el estudiante con el ID ingresado
    for (Estudiante estudiante : estudiantes) {
        if (estudiante.getId().equals(idBuscado)) {
            return estudiante; // Si se encuentra, devolver el estudiante
        } 
    }

    // Si no se encuentra el estudiante, devolver null
    return null;

    }//GEN-LAST:event_BuscarActionPerformed

    private void SalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirActionPerformed
         this.dispose(); // Cierra la ventana interna actual
    }//GEN-LAST:event_SalirActionPerformed

    /**
     * @param args the command line arguments
     */
 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField BuscadorID;
    private javax.swing.JButton Buscar;
    private javax.swing.JTextArea DatosActuales;
    private javax.swing.JButton Salir;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
