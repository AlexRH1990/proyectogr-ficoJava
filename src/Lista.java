/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.util.ArrayList;
import java.util.Collections;
import javax.swing.JFormattedTextField;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
/**import javax.swing.JInternalFrame;
 *
 * @author 50687
 */


public class Lista extends javax.swing.JInternalFrame {

    private ArrayList<String> datos;


    /**
     * Creates new form Lista
     */
    public Lista() {
        initComponents();
        cargarDatos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Orden = new javax.swing.JComboBox<>();
        Carrera = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        Salir = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        BuscadorPromedio = new javax.swing.JFormattedTextField();
        Enviar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        Orden.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Descendente", "Ascendete" }));
        Orden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OrdenActionPerformed(evt);
            }
        });

        Carrera.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Medicina", "Ingeniería Civil", "Psicología", "Administración de Empresas", "Derecho", "Economía", "Enfermería", "Arquitectura", "Educación", "Ingeniería Informática", "Contabilidad", "Comunicación", "Marketing", "Biología", "Ciencias de la Computación" }));
        Carrera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CarreraActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        Salir.setText("Salir");
        Salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirActionPerformed(evt);
            }
        });

        jLabel1.setText("Promedio");

        BuscadorPromedio.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter()));

        Enviar.setText("enviar");
        Enviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EnviarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Carrera, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Orden, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(97, 97, 97)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Salir))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(BuscadorPromedio, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Enviar)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 497, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(84, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Orden, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Salir))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Carrera, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)
                        .addComponent(BuscadorPromedio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Enviar, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
  private void cargarDatos() {
        datos = new ArrayList<>();
        File archivo = null;
        FileReader fr = null;
        BufferedReader br = null;

        try {
            archivo = new File("Promedios.txt");
            fr = new FileReader(archivo);
            br = new BufferedReader(fr);

            String linea;
            while ((linea = br.readLine()) != null) {
                datos.add(linea);
            }
            ordenarDatos(); // Ordenar al cargar
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al cargar los datos", "Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            try {
                if (null != fr) {
                    fr.close();
                }
            } catch (Exception e2) {
                JOptionPane.showMessageDialog(null, "Error al cerrar el archivo", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }
  
 private void buscarPromedio(String promedioBuscado) {
    ArrayList<String> datosFiltrados = new ArrayList<>();

    for (String dato : datos) {
        // Dividir la línea en partes utilizando la coma como separador
        String[] partes = dato.split(",");
        
        // Obtener el valor del promedio (última parte después de la coma)
        String promedio = partes[partes.length - 1];
        
        // Verificar si el promedio es igual al promedio buscado
        if (promedio.trim().equals(promedioBuscado)) {
            datosFiltrados.add(dato);
        }
    }

    if (!datosFiltrados.isEmpty()) {
        // Mostrar los datos filtrados que coinciden con el promedio buscado
        jTextArea1.setText("");
        for (String dato : datosFiltrados) {
            jTextArea1.append(dato + "\n");
        }
    } else {
        JOptionPane.showMessageDialog(null, "No hay datos para el promedio buscado", "Información", JOptionPane.INFORMATION_MESSAGE);
    }
}





  private void mostrarDatos() {
    jTextArea1.setText(""); // Limpiar el área de texto antes de mostrar los datos
    for (String dato : datos) {
        jTextArea1.append(dato + "\n"); // Agregar cada dato al área de texto
    }
}


    private void ordenarDatos() {
        if (Orden.getSelectedIndex() == 0) {
            // Orden descendente
            Collections.sort(datos, Collections.reverseOrder());
        } else {
            // Orden ascendente
            Collections.sort(datos);
        }
        mostrarDatos();
    }

    private void filtrarDatos() {
        String carreraSeleccionada = (String) Carrera.getSelectedItem();
        ArrayList<String> datosFiltrados = new ArrayList<>();

        for (String dato : datos) {
            if (dato.contains(carreraSeleccionada)) {
                datosFiltrados.add(dato);
            }
        }

        if (!datosFiltrados.isEmpty()) {
            jTextArea1.setText("");
            for (String dato : datosFiltrados) {
                jTextArea1.append(dato + "\n");
            }
        } else {
            JOptionPane.showMessageDialog(null, "No hay datos para la carrera seleccionada", "Información", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    private void OrdenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OrdenActionPerformed
        ordenarDatos();
    }//GEN-LAST:event_OrdenActionPerformed

    private void CarreraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CarreraActionPerformed
         filtrarDatos();
    }//GEN-LAST:event_CarreraActionPerformed

    private void SalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirActionPerformed
          this.dispose(); // Cierra la ventana interna actual
    }//GEN-LAST:event_SalirActionPerformed

    private void EnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EnviarActionPerformed
         String promedioBuscado = BuscadorPromedio.getText(); // Obtener el texto ingresado en el campo BuscadorPromedio
    buscarPromedio(promedioBuscado); // Llamar al método buscarPromedio con el texto ingresado
    }//GEN-LAST:event_EnviarActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFormattedTextField BuscadorPromedio;
    private javax.swing.JComboBox<String> Carrera;
    private javax.swing.JButton Enviar;
    private javax.swing.JComboBox<String> Orden;
    private javax.swing.JButton Salir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables

    private void buscarPromedio(JFormattedTextField BuscadorPromedio) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
